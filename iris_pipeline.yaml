# PIPELINE DEFINITION
# Name: iris-no-artifacts-pipeline
# Description: ML pipeline without file artifacts, returns accuracy.
components:
  comp-load-data:
    executorLabel: exec-load-data
    outputDefinitions:
      parameters:
        features:
          parameterType: LIST
        labels:
          parameterType: LIST
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      parameters:
        features:
          parameterType: LIST
        labels:
          parameterType: LIST
    outputDefinitions:
      parameters:
        accuracy:
          parameterType: NUMBER_DOUBLE
deploymentSpec:
  executors:
    exec-load-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - load_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'pandas' 'scikit-learn'\
          \  &&  python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.4'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef load_data() -> NamedTuple(\"Outputs\", [(\"features\", List[List[float]]),\
          \ (\"labels\", List[int])]):\n    from sklearn.datasets import load_iris\n\
          \    iris = load_iris()\n    return (iris.data.tolist(), iris.target.tolist())\n\
          \n"
        image: python:3.8-slim
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'scikit-learn'\
          \  &&  python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.4'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(\n    features: List[List[float]],\n    labels: List[int]\n\
          ) -> NamedTuple(\"Output\", [(\"accuracy\", float)]):\n    from sklearn.ensemble\
          \ import RandomForestClassifier\n    from sklearn.model_selection import\
          \ train_test_split\n    from sklearn.metrics import accuracy_score\n\n \
          \   X_train, X_test, y_train, y_test = train_test_split(features, labels,\
          \ test_size=0.2)\n\n    clf = RandomForestClassifier()\n    clf.fit(X_train,\
          \ y_train)\n    y_pred = clf.predict(X_test)\n    acc = accuracy_score(y_test,\
          \ y_pred)\n\n    print(f\"Model accuracy: {acc}\")\n    return (acc,)\n\n"
        image: python:3.8-slim
pipelineInfo:
  description: ML pipeline without file artifacts, returns accuracy.
  name: iris-no-artifacts-pipeline
root:
  dag:
    tasks:
      load-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-load-data
        taskInfo:
          name: load-data
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - load-data
        inputs:
          parameters:
            features:
              taskOutputParameter:
                outputParameterKey: features
                producerTask: load-data
            labels:
              taskOutputParameter:
                outputParameterKey: labels
                producerTask: load-data
        taskInfo:
          name: train-model
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.4
